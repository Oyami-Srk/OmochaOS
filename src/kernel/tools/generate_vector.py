#!/usr/local/bin/python3
# -*- coding: utf-8 -*-
# author: Shiroko

import time
from string import Template

VECTOR_HEADER = """; generated by script 'generate_vector.py'
; please do not modify
; generated at {time}
""".format(time=time.asctime(time.localtime(time.time())))


check_isph = lambda n:not (n is 8 or (n >= 10 and n <= 14) or i is 17)

def generate_vect(vect_no: int, handler: str) -> str:
    vect = ""
    vect += "global vector" + str(vect_no)
    vect += "\nvector" + str(vect_no) + ":"
    vect += "\n  push dword 0x0" if check_isph(vect_no) else ""
    vect += "\n  push dword " + str(vect_no)
    vect += "\n  jmp " + handler.strip()
    vect += "\n"
    return vect

if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(description="Automate generate vector fuction and table for OmochaOS")
    parser.add_argument('-d', '--handler', dest="NAME", help="Handler name of vector, default is vector_handler", default='vector_handler')
    parser.add_argument('-t', '--table_name', dest="TABLE_NAME", help="Vector name. default is vector_name", default='vector_table')
    args = parser.parse_args()

    total_count = 256
    print(VECTOR_HEADER)
    print("[BITS 32]")
    print("[SECTION .text]")
    print("extern %s\n" % args.NAME.strip())
    for i in range(0, total_count):
        print(generate_vect(i, args.NAME))

    print("")
    print("[BITS 32]")
    print("[SECTION .data]\nglobal vector_table\n%s:" % args.TABLE_NAME.strip())
    for i in range(0, total_count):
        print("  dd vector%d" % i)




